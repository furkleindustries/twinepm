{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap","webpack:///external \"stream\"","webpack:///external \"zlib\"","webpack:///external \"url\"","webpack:///external \"http\"","webpack:///external \"https\"","webpack:///./src/apiUrl.ts","webpack:///./src/TwinePmAssetTypes.ts","webpack:///./node_modules/node-fetch/lib/index.mjs","webpack:///./src/fetchAsset.ts","webpack:///./src/index.ts"],"names":["root","factory","exports","module","define","amd","a","i","global","installedModules","__webpack_require__","moduleId","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","require","TwinePmAssetTypes","apiUrl","BUFFER","TYPE","Blob","[object Object]","this","blobParts","arguments","options","buffers","length","Number","element","buffer","Buffer","ArrayBuffer","isView","from","byteOffset","byteLength","String","push","concat","type","undefined","toLowerCase","test","size","start","end","relativeStart","relativeEnd","Math","max","min","span","slicedBuffer","slice","blob","FetchError","message","systemError","Error","code","errno","captureStackTrace","constructor","convert","defineProperties","writable","configurable","e","INTERNALS","PassThrough","external_stream_","Body","body","_this","_ref","_ref$size","_ref$timeout","timeout","isURLSearchParams","isBuffer","toString","disturbed","error","on","err","url","consumeBody","_this4","Promise","reject","TypeError","resolve","alloc","accum","accumBytes","abort","resTimeout","setTimeout","chunk","clearTimeout","obj","append","delete","getAll","has","set","sort","clone","instance","p1","p2","bodyUsed","getBoundary","pipe","getTotalBytes","getLengthSync","_lengthRetrievers","hasKnownLength","then","buf","ct","headers","assign","_this2","JSON","parse","_this3","res","str","charset","exec","pop","convertBody","arrayBuffer","json","text","mixIn","proto","getOwnPropertyNames","desc","getOwnPropertyDescriptor","invalidTokenRegex","invalidHeaderCharRegex","validateName","validateValue","find","map","MAP","Headers","init","rawHeaders","raw","headerNames","keys","headerName","method","iterator","pairs","pair","Array","join","callback","thisArg","getHeaders","_pairs$i","createHeadersIterator","kind","k","entries","forEach","values","INTERNAL","target","HeadersIteratorPrototype","index","setPrototypeOf","getPrototypeOf","_INTERNAL","done","INTERNALS$1","STATUS_CODES","external_http_","Response","opts","status","statusText","ok","INTERNALS$2","parse_url","external_url_","format_url","format","isRequest","input","Request","parsedURL","href","toUpperCase","inputBody","contentType","extractContentType","redirect","follow","compress","counter","agent","getNodeRequestOptions","request","protocol","hostname","contentLengthValue","totalBytes","__proto__","hostHeaderKey","exportNodeCompatibleHeaders","PassThrough$1","resolve_url","fetch","req","send","external_https_","reqTimeout","finalize","once","socket","isArray","val","createHeadersLenient","isRedirect","statusCode","location","locationURL","requestOpts","response_options","statusMessage","codings","zlibOptions","flush","external_zlib_","Z_SYNC_FLUSH","finishFlush","createGunzip","createInflate","createInflateRaw","dest","write","writeToStream","lib","fetchAsset","id","args","cursor","quantity","search","data","__webpack_exports__"],"mappings":"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","file":"index.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(global, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 5);\n","module.exports = require(\"stream\");","module.exports = require(\"zlib\");","module.exports = require(\"url\");","module.exports = require(\"http\");","module.exports = require(\"https\");","/* Don't add a trailing slash. */\r\nexport var apiUrl = 'http://127.0.0.1:8000/api';\r\n","export var TwinePmAssetTypes;\r\n(function (TwinePmAssetTypes) {\r\n    TwinePmAssetTypes[\"Package\"] = \"Package\";\r\n    TwinePmAssetTypes[\"Profile\"] = \"Profile\";\r\n    TwinePmAssetTypes[\"Version\"] = \"Version\";\r\n})(TwinePmAssetTypes || (TwinePmAssetTypes = {}));\r\n","import Stream from 'stream';\nimport http from 'http';\nimport Url from 'url';\nimport https from 'https';\nimport zlib from 'zlib';\n\n// Based on https://github.com/tmpvar/jsdom/blob/aa85b2abf07766ff7bf5c1f6daafb3726f2f2db5/lib/jsdom/living/blob.js\n// (MIT licensed)\n\nconst BUFFER = Symbol('buffer');\nconst TYPE = Symbol('type');\n\nclass Blob {\n\tconstructor() {\n\t\tthis[TYPE] = '';\n\n\t\tconst blobParts = arguments[0];\n\t\tconst options = arguments[1];\n\n\t\tconst buffers = [];\n\n\t\tif (blobParts) {\n\t\t\tconst a = blobParts;\n\t\t\tconst length = Number(a.length);\n\t\t\tfor (let i = 0; i < length; i++) {\n\t\t\t\tconst element = a[i];\n\t\t\t\tlet buffer;\n\t\t\t\tif (element instanceof Buffer) {\n\t\t\t\t\tbuffer = element;\n\t\t\t\t} else if (ArrayBuffer.isView(element)) {\n\t\t\t\t\tbuffer = Buffer.from(element.buffer, element.byteOffset, element.byteLength);\n\t\t\t\t} else if (element instanceof ArrayBuffer) {\n\t\t\t\t\tbuffer = Buffer.from(element);\n\t\t\t\t} else if (element instanceof Blob) {\n\t\t\t\t\tbuffer = element[BUFFER];\n\t\t\t\t} else {\n\t\t\t\t\tbuffer = Buffer.from(typeof element === 'string' ? element : String(element));\n\t\t\t\t}\n\t\t\t\tbuffers.push(buffer);\n\t\t\t}\n\t\t}\n\n\t\tthis[BUFFER] = Buffer.concat(buffers);\n\n\t\tlet type = options && options.type !== undefined && String(options.type).toLowerCase();\n\t\tif (type && !/[^\\u0020-\\u007E]/.test(type)) {\n\t\t\tthis[TYPE] = type;\n\t\t}\n\t}\n\tget size() {\n\t\treturn this[BUFFER].length;\n\t}\n\tget type() {\n\t\treturn this[TYPE];\n\t}\n\tslice() {\n\t\tconst size = this.size;\n\n\t\tconst start = arguments[0];\n\t\tconst end = arguments[1];\n\t\tlet relativeStart, relativeEnd;\n\t\tif (start === undefined) {\n\t\t\trelativeStart = 0;\n\t\t} else if (start < 0) {\n\t\t\trelativeStart = Math.max(size + start, 0);\n\t\t} else {\n\t\t\trelativeStart = Math.min(start, size);\n\t\t}\n\t\tif (end === undefined) {\n\t\t\trelativeEnd = size;\n\t\t} else if (end < 0) {\n\t\t\trelativeEnd = Math.max(size + end, 0);\n\t\t} else {\n\t\t\trelativeEnd = Math.min(end, size);\n\t\t}\n\t\tconst span = Math.max(relativeEnd - relativeStart, 0);\n\n\t\tconst buffer = this[BUFFER];\n\t\tconst slicedBuffer = buffer.slice(relativeStart, relativeStart + span);\n\t\tconst blob = new Blob([], { type: arguments[2] });\n\t\tblob[BUFFER] = slicedBuffer;\n\t\treturn blob;\n\t}\n}\n\nObject.defineProperties(Blob.prototype, {\n\tsize: { enumerable: true },\n\ttype: { enumerable: true },\n\tslice: { enumerable: true }\n});\n\nObject.defineProperty(Blob.prototype, Symbol.toStringTag, {\n\tvalue: 'Blob',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n});\n\n/**\n * fetch-error.js\n *\n * FetchError interface for operational errors\n */\n\n/**\n * Create FetchError instance\n *\n * @param   String      message      Error message for human\n * @param   String      type         Error type for machine\n * @param   String      systemError  For Node.js system error\n * @return  FetchError\n */\nfunction FetchError(message, type, systemError) {\n  Error.call(this, message);\n\n  this.message = message;\n  this.type = type;\n\n  // when err.type is `system`, err.code contains system error code\n  if (systemError) {\n    this.code = this.errno = systemError.code;\n  }\n\n  // hide custom error implementation details from end-users\n  Error.captureStackTrace(this, this.constructor);\n}\n\nFetchError.prototype = Object.create(Error.prototype);\nFetchError.prototype.constructor = FetchError;\nFetchError.prototype.name = 'FetchError';\n\nlet convert;\ntry {\n\tconvert = require('encoding').convert;\n} catch (e) {}\n\nconst INTERNALS = Symbol('Body internals');\n\n// fix an issue where \"PassThrough\" isn't a named export for node <10\nconst PassThrough = Stream.PassThrough;\n\n/**\n * Body mixin\n *\n * Ref: https://fetch.spec.whatwg.org/#body\n *\n * @param   Stream  body  Readable stream\n * @param   Object  opts  Response options\n * @return  Void\n */\nfunction Body(body) {\n\tvar _this = this;\n\n\tvar _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n\t    _ref$size = _ref.size;\n\n\tlet size = _ref$size === undefined ? 0 : _ref$size;\n\tvar _ref$timeout = _ref.timeout;\n\tlet timeout = _ref$timeout === undefined ? 0 : _ref$timeout;\n\n\tif (body == null) {\n\t\t// body is undefined or null\n\t\tbody = null;\n\t} else if (typeof body === 'string') ; else if (isURLSearchParams(body)) ; else if (body instanceof Blob) ; else if (Buffer.isBuffer(body)) ; else if (Object.prototype.toString.call(body) === '[object ArrayBuffer]') ; else if (ArrayBuffer.isView(body)) ; else if (body instanceof Stream) ; else {\n\t\t// none of the above\n\t\t// coerce to string\n\t\tbody = String(body);\n\t}\n\tthis[INTERNALS] = {\n\t\tbody,\n\t\tdisturbed: false,\n\t\terror: null\n\t};\n\tthis.size = size;\n\tthis.timeout = timeout;\n\n\tif (body instanceof Stream) {\n\t\tbody.on('error', function (err) {\n\t\t\t_this[INTERNALS].error = new FetchError(`Invalid response body while trying to fetch ${_this.url}: ${err.message}`, 'system', err);\n\t\t});\n\t}\n}\n\nBody.prototype = {\n\tget body() {\n\t\treturn this[INTERNALS].body;\n\t},\n\n\tget bodyUsed() {\n\t\treturn this[INTERNALS].disturbed;\n\t},\n\n\t/**\n  * Decode response as ArrayBuffer\n  *\n  * @return  Promise\n  */\n\tarrayBuffer() {\n\t\treturn consumeBody.call(this).then(function (buf) {\n\t\t\treturn buf.buffer.slice(buf.byteOffset, buf.byteOffset + buf.byteLength);\n\t\t});\n\t},\n\n\t/**\n  * Return raw response as Blob\n  *\n  * @return Promise\n  */\n\tblob() {\n\t\tlet ct = this.headers && this.headers.get('content-type') || '';\n\t\treturn consumeBody.call(this).then(function (buf) {\n\t\t\treturn Object.assign(\n\t\t\t// Prevent copying\n\t\t\tnew Blob([], {\n\t\t\t\ttype: ct.toLowerCase()\n\t\t\t}), {\n\t\t\t\t[BUFFER]: buf\n\t\t\t});\n\t\t});\n\t},\n\n\t/**\n  * Decode response as json\n  *\n  * @return  Promise\n  */\n\tjson() {\n\t\tvar _this2 = this;\n\n\t\treturn consumeBody.call(this).then(function (buffer) {\n\t\t\ttry {\n\t\t\t\treturn JSON.parse(buffer.toString());\n\t\t\t} catch (err) {\n\t\t\t\treturn Body.Promise.reject(new FetchError(`invalid json response body at ${_this2.url} reason: ${err.message}`, 'invalid-json'));\n\t\t\t}\n\t\t});\n\t},\n\n\t/**\n  * Decode response as text\n  *\n  * @return  Promise\n  */\n\ttext() {\n\t\treturn consumeBody.call(this).then(function (buffer) {\n\t\t\treturn buffer.toString();\n\t\t});\n\t},\n\n\t/**\n  * Decode response as buffer (non-spec api)\n  *\n  * @return  Promise\n  */\n\tbuffer() {\n\t\treturn consumeBody.call(this);\n\t},\n\n\t/**\n  * Decode response as text, while automatically detecting the encoding and\n  * trying to decode to UTF-8 (non-spec api)\n  *\n  * @return  Promise\n  */\n\ttextConverted() {\n\t\tvar _this3 = this;\n\n\t\treturn consumeBody.call(this).then(function (buffer) {\n\t\t\treturn convertBody(buffer, _this3.headers);\n\t\t});\n\t}\n\n};\n\n// In browsers, all properties are enumerable.\nObject.defineProperties(Body.prototype, {\n\tbody: { enumerable: true },\n\tbodyUsed: { enumerable: true },\n\tarrayBuffer: { enumerable: true },\n\tblob: { enumerable: true },\n\tjson: { enumerable: true },\n\ttext: { enumerable: true }\n});\n\nBody.mixIn = function (proto) {\n\tfor (const name of Object.getOwnPropertyNames(Body.prototype)) {\n\t\t// istanbul ignore else: future proof\n\t\tif (!(name in proto)) {\n\t\t\tconst desc = Object.getOwnPropertyDescriptor(Body.prototype, name);\n\t\t\tObject.defineProperty(proto, name, desc);\n\t\t}\n\t}\n};\n\n/**\n * Consume and convert an entire Body to a Buffer.\n *\n * Ref: https://fetch.spec.whatwg.org/#concept-body-consume-body\n *\n * @return  Promise\n */\nfunction consumeBody() {\n\tvar _this4 = this;\n\n\tif (this[INTERNALS].disturbed) {\n\t\treturn Body.Promise.reject(new TypeError(`body used already for: ${this.url}`));\n\t}\n\n\tthis[INTERNALS].disturbed = true;\n\n\tif (this[INTERNALS].error) {\n\t\treturn Body.Promise.reject(this[INTERNALS].error);\n\t}\n\n\t// body is null\n\tif (this.body === null) {\n\t\treturn Body.Promise.resolve(Buffer.alloc(0));\n\t}\n\n\t// body is string\n\tif (typeof this.body === 'string') {\n\t\treturn Body.Promise.resolve(Buffer.from(this.body));\n\t}\n\n\t// body is blob\n\tif (this.body instanceof Blob) {\n\t\treturn Body.Promise.resolve(this.body[BUFFER]);\n\t}\n\n\t// body is buffer\n\tif (Buffer.isBuffer(this.body)) {\n\t\treturn Body.Promise.resolve(this.body);\n\t}\n\n\t// body is ArrayBuffer\n\tif (Object.prototype.toString.call(this.body) === '[object ArrayBuffer]') {\n\t\treturn Body.Promise.resolve(Buffer.from(this.body));\n\t}\n\n\t// body is ArrayBufferView\n\tif (ArrayBuffer.isView(this.body)) {\n\t\treturn Body.Promise.resolve(Buffer.from(this.body.buffer, this.body.byteOffset, this.body.byteLength));\n\t}\n\n\t// istanbul ignore if: should never happen\n\tif (!(this.body instanceof Stream)) {\n\t\treturn Body.Promise.resolve(Buffer.alloc(0));\n\t}\n\n\t// body is stream\n\t// get ready to actually consume the body\n\tlet accum = [];\n\tlet accumBytes = 0;\n\tlet abort = false;\n\n\treturn new Body.Promise(function (resolve, reject) {\n\t\tlet resTimeout;\n\n\t\t// allow timeout on slow response body\n\t\tif (_this4.timeout) {\n\t\t\tresTimeout = setTimeout(function () {\n\t\t\t\tabort = true;\n\t\t\t\treject(new FetchError(`Response timeout while trying to fetch ${_this4.url} (over ${_this4.timeout}ms)`, 'body-timeout'));\n\t\t\t}, _this4.timeout);\n\t\t}\n\n\t\t// handle stream error, such as incorrect content-encoding\n\t\t_this4.body.on('error', function (err) {\n\t\t\treject(new FetchError(`Invalid response body while trying to fetch ${_this4.url}: ${err.message}`, 'system', err));\n\t\t});\n\n\t\t_this4.body.on('data', function (chunk) {\n\t\t\tif (abort || chunk === null) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (_this4.size && accumBytes + chunk.length > _this4.size) {\n\t\t\t\tabort = true;\n\t\t\t\treject(new FetchError(`content size at ${_this4.url} over limit: ${_this4.size}`, 'max-size'));\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\taccumBytes += chunk.length;\n\t\t\taccum.push(chunk);\n\t\t});\n\n\t\t_this4.body.on('end', function () {\n\t\t\tif (abort) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tclearTimeout(resTimeout);\n\n\t\t\ttry {\n\t\t\t\tresolve(Buffer.concat(accum));\n\t\t\t} catch (err) {\n\t\t\t\t// handle streams that have accumulated too much data (issue #414)\n\t\t\t\treject(new FetchError(`Could not create Buffer from response body for ${_this4.url}: ${err.message}`, 'system', err));\n\t\t\t}\n\t\t});\n\t});\n}\n\n/**\n * Detect buffer encoding and convert to target encoding\n * ref: http://www.w3.org/TR/2011/WD-html5-20110113/parsing.html#determining-the-character-encoding\n *\n * @param   Buffer  buffer    Incoming buffer\n * @param   String  encoding  Target encoding\n * @return  String\n */\nfunction convertBody(buffer, headers) {\n\tif (typeof convert !== 'function') {\n\t\tthrow new Error('The package `encoding` must be installed to use the textConverted() function');\n\t}\n\n\tconst ct = headers.get('content-type');\n\tlet charset = 'utf-8';\n\tlet res, str;\n\n\t// header\n\tif (ct) {\n\t\tres = /charset=([^;]*)/i.exec(ct);\n\t}\n\n\t// no charset in content type, peek at response body for at most 1024 bytes\n\tstr = buffer.slice(0, 1024).toString();\n\n\t// html5\n\tif (!res && str) {\n\t\tres = /<meta.+?charset=(['\"])(.+?)\\1/i.exec(str);\n\t}\n\n\t// html4\n\tif (!res && str) {\n\t\tres = /<meta[\\s]+?http-equiv=(['\"])content-type\\1[\\s]+?content=(['\"])(.+?)\\2/i.exec(str);\n\n\t\tif (res) {\n\t\t\tres = /charset=(.*)/i.exec(res.pop());\n\t\t}\n\t}\n\n\t// xml\n\tif (!res && str) {\n\t\tres = /<\\?xml.+?encoding=(['\"])(.+?)\\1/i.exec(str);\n\t}\n\n\t// found charset\n\tif (res) {\n\t\tcharset = res.pop();\n\n\t\t// prevent decode issues when sites use incorrect encoding\n\t\t// ref: https://hsivonen.fi/encoding-menu/\n\t\tif (charset === 'gb2312' || charset === 'gbk') {\n\t\t\tcharset = 'gb18030';\n\t\t}\n\t}\n\n\t// turn raw buffers into a single utf-8 buffer\n\treturn convert(buffer, 'UTF-8', charset).toString();\n}\n\n/**\n * Detect a URLSearchParams object\n * ref: https://github.com/bitinn/node-fetch/issues/296#issuecomment-307598143\n *\n * @param   Object  obj     Object to detect by type or brand\n * @return  String\n */\nfunction isURLSearchParams(obj) {\n\t// Duck-typing as a necessary condition.\n\tif (typeof obj !== 'object' || typeof obj.append !== 'function' || typeof obj.delete !== 'function' || typeof obj.get !== 'function' || typeof obj.getAll !== 'function' || typeof obj.has !== 'function' || typeof obj.set !== 'function') {\n\t\treturn false;\n\t}\n\n\t// Brand-checking and more duck-typing as optional condition.\n\treturn obj.constructor.name === 'URLSearchParams' || Object.prototype.toString.call(obj) === '[object URLSearchParams]' || typeof obj.sort === 'function';\n}\n\n/**\n * Clone body given Res/Req instance\n *\n * @param   Mixed  instance  Response or Request instance\n * @return  Mixed\n */\nfunction clone(instance) {\n\tlet p1, p2;\n\tlet body = instance.body;\n\n\t// don't allow cloning a used body\n\tif (instance.bodyUsed) {\n\t\tthrow new Error('cannot clone body after it is used');\n\t}\n\n\t// check that body is a stream and not form-data object\n\t// note: we can't clone the form-data object without having it as a dependency\n\tif (body instanceof Stream && typeof body.getBoundary !== 'function') {\n\t\t// tee instance body\n\t\tp1 = new PassThrough();\n\t\tp2 = new PassThrough();\n\t\tbody.pipe(p1);\n\t\tbody.pipe(p2);\n\t\t// set instance body to teed body and return the other teed body\n\t\tinstance[INTERNALS].body = p1;\n\t\tbody = p2;\n\t}\n\n\treturn body;\n}\n\n/**\n * Performs the operation \"extract a `Content-Type` value from |object|\" as\n * specified in the specification:\n * https://fetch.spec.whatwg.org/#concept-bodyinit-extract\n *\n * This function assumes that instance.body is present.\n *\n * @param   Mixed  instance  Response or Request instance\n */\nfunction extractContentType(instance) {\n\tconst body = instance.body;\n\n\t// istanbul ignore if: Currently, because of a guard in Request, body\n\t// can never be null. Included here for completeness.\n\n\tif (body === null) {\n\t\t// body is null\n\t\treturn null;\n\t} else if (typeof body === 'string') {\n\t\t// body is string\n\t\treturn 'text/plain;charset=UTF-8';\n\t} else if (isURLSearchParams(body)) {\n\t\t// body is a URLSearchParams\n\t\treturn 'application/x-www-form-urlencoded;charset=UTF-8';\n\t} else if (body instanceof Blob) {\n\t\t// body is blob\n\t\treturn body.type || null;\n\t} else if (Buffer.isBuffer(body)) {\n\t\t// body is buffer\n\t\treturn null;\n\t} else if (Object.prototype.toString.call(body) === '[object ArrayBuffer]') {\n\t\t// body is ArrayBuffer\n\t\treturn null;\n\t} else if (ArrayBuffer.isView(body)) {\n\t\t// body is ArrayBufferView\n\t\treturn null;\n\t} else if (typeof body.getBoundary === 'function') {\n\t\t// detect form data input from form-data module\n\t\treturn `multipart/form-data;boundary=${body.getBoundary()}`;\n\t} else {\n\t\t// body is stream\n\t\t// can't really do much about this\n\t\treturn null;\n\t}\n}\n\n/**\n * The Fetch Standard treats this as if \"total bytes\" is a property on the body.\n * For us, we have to explicitly get it with a function.\n *\n * ref: https://fetch.spec.whatwg.org/#concept-body-total-bytes\n *\n * @param   Body    instance   Instance of Body\n * @return  Number?            Number of bytes, or null if not possible\n */\nfunction getTotalBytes(instance) {\n\tconst body = instance.body;\n\n\t// istanbul ignore if: included for completion\n\n\tif (body === null) {\n\t\t// body is null\n\t\treturn 0;\n\t} else if (typeof body === 'string') {\n\t\t// body is string\n\t\treturn Buffer.byteLength(body);\n\t} else if (isURLSearchParams(body)) {\n\t\t// body is URLSearchParams\n\t\treturn Buffer.byteLength(String(body));\n\t} else if (body instanceof Blob) {\n\t\t// body is blob\n\t\treturn body.size;\n\t} else if (Buffer.isBuffer(body)) {\n\t\t// body is buffer\n\t\treturn body.length;\n\t} else if (Object.prototype.toString.call(body) === '[object ArrayBuffer]') {\n\t\t// body is ArrayBuffer\n\t\treturn body.byteLength;\n\t} else if (ArrayBuffer.isView(body)) {\n\t\t// body is ArrayBufferView\n\t\treturn body.byteLength;\n\t} else if (body && typeof body.getLengthSync === 'function') {\n\t\t// detect form data input from form-data module\n\t\tif (body._lengthRetrievers && body._lengthRetrievers.length == 0 || // 1.x\n\t\tbody.hasKnownLength && body.hasKnownLength()) {\n\t\t\t// 2.x\n\t\t\treturn body.getLengthSync();\n\t\t}\n\t\treturn null;\n\t} else {\n\t\t// body is stream\n\t\t// can't really do much about this\n\t\treturn null;\n\t}\n}\n\n/**\n * Write a Body to a Node.js WritableStream (e.g. http.Request) object.\n *\n * @param   Body    instance   Instance of Body\n * @return  Void\n */\nfunction writeToStream(dest, instance) {\n\tconst body = instance.body;\n\n\n\tif (body === null) {\n\t\t// body is null\n\t\tdest.end();\n\t} else if (typeof body === 'string') {\n\t\t// body is string\n\t\tdest.write(body);\n\t\tdest.end();\n\t} else if (isURLSearchParams(body)) {\n\t\t// body is URLSearchParams\n\t\tdest.write(Buffer.from(String(body)));\n\t\tdest.end();\n\t} else if (body instanceof Blob) {\n\t\t// body is blob\n\t\tdest.write(body[BUFFER]);\n\t\tdest.end();\n\t} else if (Buffer.isBuffer(body)) {\n\t\t// body is buffer\n\t\tdest.write(body);\n\t\tdest.end();\n\t} else if (Object.prototype.toString.call(body) === '[object ArrayBuffer]') {\n\t\t// body is ArrayBuffer\n\t\tdest.write(Buffer.from(body));\n\t\tdest.end();\n\t} else if (ArrayBuffer.isView(body)) {\n\t\t// body is ArrayBufferView\n\t\tdest.write(Buffer.from(body.buffer, body.byteOffset, body.byteLength));\n\t\tdest.end();\n\t} else {\n\t\t// body is stream\n\t\tbody.pipe(dest);\n\t}\n}\n\n// expose Promise\nBody.Promise = global.Promise;\n\n/**\n * headers.js\n *\n * Headers class offers convenient helpers\n */\n\nconst invalidTokenRegex = /[^\\^_`a-zA-Z\\-0-9!#$%&'*+.|~]/;\nconst invalidHeaderCharRegex = /[^\\t\\x20-\\x7e\\x80-\\xff]/;\n\nfunction validateName(name) {\n\tname = `${name}`;\n\tif (invalidTokenRegex.test(name)) {\n\t\tthrow new TypeError(`${name} is not a legal HTTP header name`);\n\t}\n}\n\nfunction validateValue(value) {\n\tvalue = `${value}`;\n\tif (invalidHeaderCharRegex.test(value)) {\n\t\tthrow new TypeError(`${value} is not a legal HTTP header value`);\n\t}\n}\n\n/**\n * Find the key in the map object given a header name.\n *\n * Returns undefined if not found.\n *\n * @param   String  name  Header name\n * @return  String|Undefined\n */\nfunction find(map, name) {\n\tname = name.toLowerCase();\n\tfor (const key in map) {\n\t\tif (key.toLowerCase() === name) {\n\t\t\treturn key;\n\t\t}\n\t}\n\treturn undefined;\n}\n\nconst MAP = Symbol('map');\nclass Headers {\n\t/**\n  * Headers class\n  *\n  * @param   Object  headers  Response headers\n  * @return  Void\n  */\n\tconstructor() {\n\t\tlet init = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : undefined;\n\n\t\tthis[MAP] = Object.create(null);\n\n\t\tif (init instanceof Headers) {\n\t\t\tconst rawHeaders = init.raw();\n\t\t\tconst headerNames = Object.keys(rawHeaders);\n\n\t\t\tfor (const headerName of headerNames) {\n\t\t\t\tfor (const value of rawHeaders[headerName]) {\n\t\t\t\t\tthis.append(headerName, value);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\t// We don't worry about converting prop to ByteString here as append()\n\t\t// will handle it.\n\t\tif (init == null) ; else if (typeof init === 'object') {\n\t\t\tconst method = init[Symbol.iterator];\n\t\t\tif (method != null) {\n\t\t\t\tif (typeof method !== 'function') {\n\t\t\t\t\tthrow new TypeError('Header pairs must be iterable');\n\t\t\t\t}\n\n\t\t\t\t// sequence<sequence<ByteString>>\n\t\t\t\t// Note: per spec we have to first exhaust the lists then process them\n\t\t\t\tconst pairs = [];\n\t\t\t\tfor (const pair of init) {\n\t\t\t\t\tif (typeof pair !== 'object' || typeof pair[Symbol.iterator] !== 'function') {\n\t\t\t\t\t\tthrow new TypeError('Each header pair must be iterable');\n\t\t\t\t\t}\n\t\t\t\t\tpairs.push(Array.from(pair));\n\t\t\t\t}\n\n\t\t\t\tfor (const pair of pairs) {\n\t\t\t\t\tif (pair.length !== 2) {\n\t\t\t\t\t\tthrow new TypeError('Each header pair must be a name/value tuple');\n\t\t\t\t\t}\n\t\t\t\t\tthis.append(pair[0], pair[1]);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// record<ByteString, ByteString>\n\t\t\t\tfor (const key of Object.keys(init)) {\n\t\t\t\t\tconst value = init[key];\n\t\t\t\t\tthis.append(key, value);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tthrow new TypeError('Provided initializer must be an object');\n\t\t}\n\t}\n\n\t/**\n  * Return combined header value given name\n  *\n  * @param   String  name  Header name\n  * @return  Mixed\n  */\n\tget(name) {\n\t\tname = `${name}`;\n\t\tvalidateName(name);\n\t\tconst key = find(this[MAP], name);\n\t\tif (key === undefined) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn this[MAP][key].join(', ');\n\t}\n\n\t/**\n  * Iterate over all headers\n  *\n  * @param   Function  callback  Executed for each item with parameters (value, name, thisArg)\n  * @param   Boolean   thisArg   `this` context for callback function\n  * @return  Void\n  */\n\tforEach(callback) {\n\t\tlet thisArg = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;\n\n\t\tlet pairs = getHeaders(this);\n\t\tlet i = 0;\n\t\twhile (i < pairs.length) {\n\t\t\tvar _pairs$i = pairs[i];\n\t\t\tconst name = _pairs$i[0],\n\t\t\t      value = _pairs$i[1];\n\n\t\t\tcallback.call(thisArg, value, name, this);\n\t\t\tpairs = getHeaders(this);\n\t\t\ti++;\n\t\t}\n\t}\n\n\t/**\n  * Overwrite header values given name\n  *\n  * @param   String  name   Header name\n  * @param   String  value  Header value\n  * @return  Void\n  */\n\tset(name, value) {\n\t\tname = `${name}`;\n\t\tvalue = `${value}`;\n\t\tvalidateName(name);\n\t\tvalidateValue(value);\n\t\tconst key = find(this[MAP], name);\n\t\tthis[MAP][key !== undefined ? key : name] = [value];\n\t}\n\n\t/**\n  * Append a value onto existing header\n  *\n  * @param   String  name   Header name\n  * @param   String  value  Header value\n  * @return  Void\n  */\n\tappend(name, value) {\n\t\tname = `${name}`;\n\t\tvalue = `${value}`;\n\t\tvalidateName(name);\n\t\tvalidateValue(value);\n\t\tconst key = find(this[MAP], name);\n\t\tif (key !== undefined) {\n\t\t\tthis[MAP][key].push(value);\n\t\t} else {\n\t\t\tthis[MAP][name] = [value];\n\t\t}\n\t}\n\n\t/**\n  * Check for header name existence\n  *\n  * @param   String   name  Header name\n  * @return  Boolean\n  */\n\thas(name) {\n\t\tname = `${name}`;\n\t\tvalidateName(name);\n\t\treturn find(this[MAP], name) !== undefined;\n\t}\n\n\t/**\n  * Delete all header values given name\n  *\n  * @param   String  name  Header name\n  * @return  Void\n  */\n\tdelete(name) {\n\t\tname = `${name}`;\n\t\tvalidateName(name);\n\t\tconst key = find(this[MAP], name);\n\t\tif (key !== undefined) {\n\t\t\tdelete this[MAP][key];\n\t\t}\n\t}\n\n\t/**\n  * Return raw headers (non-spec api)\n  *\n  * @return  Object\n  */\n\traw() {\n\t\treturn this[MAP];\n\t}\n\n\t/**\n  * Get an iterator on keys.\n  *\n  * @return  Iterator\n  */\n\tkeys() {\n\t\treturn createHeadersIterator(this, 'key');\n\t}\n\n\t/**\n  * Get an iterator on values.\n  *\n  * @return  Iterator\n  */\n\tvalues() {\n\t\treturn createHeadersIterator(this, 'value');\n\t}\n\n\t/**\n  * Get an iterator on entries.\n  *\n  * This is the default iterator of the Headers object.\n  *\n  * @return  Iterator\n  */\n\t[Symbol.iterator]() {\n\t\treturn createHeadersIterator(this, 'key+value');\n\t}\n}\nHeaders.prototype.entries = Headers.prototype[Symbol.iterator];\n\nObject.defineProperty(Headers.prototype, Symbol.toStringTag, {\n\tvalue: 'Headers',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n});\n\nObject.defineProperties(Headers.prototype, {\n\tget: { enumerable: true },\n\tforEach: { enumerable: true },\n\tset: { enumerable: true },\n\tappend: { enumerable: true },\n\thas: { enumerable: true },\n\tdelete: { enumerable: true },\n\tkeys: { enumerable: true },\n\tvalues: { enumerable: true },\n\tentries: { enumerable: true }\n});\n\nfunction getHeaders(headers) {\n\tlet kind = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'key+value';\n\n\tconst keys = Object.keys(headers[MAP]).sort();\n\treturn keys.map(kind === 'key' ? function (k) {\n\t\treturn k.toLowerCase();\n\t} : kind === 'value' ? function (k) {\n\t\treturn headers[MAP][k].join(', ');\n\t} : function (k) {\n\t\treturn [k.toLowerCase(), headers[MAP][k].join(', ')];\n\t});\n}\n\nconst INTERNAL = Symbol('internal');\n\nfunction createHeadersIterator(target, kind) {\n\tconst iterator = Object.create(HeadersIteratorPrototype);\n\titerator[INTERNAL] = {\n\t\ttarget,\n\t\tkind,\n\t\tindex: 0\n\t};\n\treturn iterator;\n}\n\nconst HeadersIteratorPrototype = Object.setPrototypeOf({\n\tnext() {\n\t\t// istanbul ignore if\n\t\tif (!this || Object.getPrototypeOf(this) !== HeadersIteratorPrototype) {\n\t\t\tthrow new TypeError('Value of `this` is not a HeadersIterator');\n\t\t}\n\n\t\tvar _INTERNAL = this[INTERNAL];\n\t\tconst target = _INTERNAL.target,\n\t\t      kind = _INTERNAL.kind,\n\t\t      index = _INTERNAL.index;\n\n\t\tconst values = getHeaders(target, kind);\n\t\tconst len = values.length;\n\t\tif (index >= len) {\n\t\t\treturn {\n\t\t\t\tvalue: undefined,\n\t\t\t\tdone: true\n\t\t\t};\n\t\t}\n\n\t\tthis[INTERNAL].index = index + 1;\n\n\t\treturn {\n\t\t\tvalue: values[index],\n\t\t\tdone: false\n\t\t};\n\t}\n}, Object.getPrototypeOf(Object.getPrototypeOf([][Symbol.iterator]())));\n\nObject.defineProperty(HeadersIteratorPrototype, Symbol.toStringTag, {\n\tvalue: 'HeadersIterator',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n});\n\n/**\n * Export the Headers object in a form that Node.js can consume.\n *\n * @param   Headers  headers\n * @return  Object\n */\nfunction exportNodeCompatibleHeaders(headers) {\n\tconst obj = Object.assign({ __proto__: null }, headers[MAP]);\n\n\t// http.request() only supports string as Host header. This hack makes\n\t// specifying custom Host header possible.\n\tconst hostHeaderKey = find(headers[MAP], 'Host');\n\tif (hostHeaderKey !== undefined) {\n\t\tobj[hostHeaderKey] = obj[hostHeaderKey][0];\n\t}\n\n\treturn obj;\n}\n\n/**\n * Create a Headers object from an object of headers, ignoring those that do\n * not conform to HTTP grammar productions.\n *\n * @param   Object  obj  Object of headers\n * @return  Headers\n */\nfunction createHeadersLenient(obj) {\n\tconst headers = new Headers();\n\tfor (const name of Object.keys(obj)) {\n\t\tif (invalidTokenRegex.test(name)) {\n\t\t\tcontinue;\n\t\t}\n\t\tif (Array.isArray(obj[name])) {\n\t\t\tfor (const val of obj[name]) {\n\t\t\t\tif (invalidHeaderCharRegex.test(val)) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif (headers[MAP][name] === undefined) {\n\t\t\t\t\theaders[MAP][name] = [val];\n\t\t\t\t} else {\n\t\t\t\t\theaders[MAP][name].push(val);\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (!invalidHeaderCharRegex.test(obj[name])) {\n\t\t\theaders[MAP][name] = [obj[name]];\n\t\t}\n\t}\n\treturn headers;\n}\n\nconst INTERNALS$1 = Symbol('Response internals');\n\n// fix an issue where \"STATUS_CODES\" aren't a named export for node <10\nconst STATUS_CODES = http.STATUS_CODES;\n\n/**\n * Response class\n *\n * @param   Stream  body  Readable stream\n * @param   Object  opts  Response options\n * @return  Void\n */\nclass Response {\n\tconstructor() {\n\t\tlet body = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n\t\tlet opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n\t\tBody.call(this, body, opts);\n\n\t\tconst status = opts.status || 200;\n\n\t\tthis[INTERNALS$1] = {\n\t\t\turl: opts.url,\n\t\t\tstatus,\n\t\t\tstatusText: opts.statusText || STATUS_CODES[status],\n\t\t\theaders: new Headers(opts.headers)\n\t\t};\n\t}\n\n\tget url() {\n\t\treturn this[INTERNALS$1].url;\n\t}\n\n\tget status() {\n\t\treturn this[INTERNALS$1].status;\n\t}\n\n\t/**\n  * Convenience property representing if the request ended normally\n  */\n\tget ok() {\n\t\treturn this[INTERNALS$1].status >= 200 && this[INTERNALS$1].status < 300;\n\t}\n\n\tget statusText() {\n\t\treturn this[INTERNALS$1].statusText;\n\t}\n\n\tget headers() {\n\t\treturn this[INTERNALS$1].headers;\n\t}\n\n\t/**\n  * Clone this response\n  *\n  * @return  Response\n  */\n\tclone() {\n\t\treturn new Response(clone(this), {\n\t\t\turl: this.url,\n\t\t\tstatus: this.status,\n\t\t\tstatusText: this.statusText,\n\t\t\theaders: this.headers,\n\t\t\tok: this.ok\n\t\t});\n\t}\n}\n\nBody.mixIn(Response.prototype);\n\nObject.defineProperties(Response.prototype, {\n\turl: { enumerable: true },\n\tstatus: { enumerable: true },\n\tok: { enumerable: true },\n\tstatusText: { enumerable: true },\n\theaders: { enumerable: true },\n\tclone: { enumerable: true }\n});\n\nObject.defineProperty(Response.prototype, Symbol.toStringTag, {\n\tvalue: 'Response',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n});\n\nconst INTERNALS$2 = Symbol('Request internals');\n\n// fix an issue where \"format\", \"parse\" aren't a named export for node <10\nconst parse_url = Url.parse;\nconst format_url = Url.format;\n\n/**\n * Check if a value is an instance of Request.\n *\n * @param   Mixed   input\n * @return  Boolean\n */\nfunction isRequest(input) {\n\treturn typeof input === 'object' && typeof input[INTERNALS$2] === 'object';\n}\n\n/**\n * Request class\n *\n * @param   Mixed   input  Url or Request instance\n * @param   Object  init   Custom options\n * @return  Void\n */\nclass Request {\n\tconstructor(input) {\n\t\tlet init = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n\t\tlet parsedURL;\n\n\t\t// normalize input\n\t\tif (!isRequest(input)) {\n\t\t\tif (input && input.href) {\n\t\t\t\t// in order to support Node.js' Url objects; though WHATWG's URL objects\n\t\t\t\t// will fall into this branch also (since their `toString()` will return\n\t\t\t\t// `href` property anyway)\n\t\t\t\tparsedURL = parse_url(input.href);\n\t\t\t} else {\n\t\t\t\t// coerce input to a string before attempting to parse\n\t\t\t\tparsedURL = parse_url(`${input}`);\n\t\t\t}\n\t\t\tinput = {};\n\t\t} else {\n\t\t\tparsedURL = parse_url(input.url);\n\t\t}\n\n\t\tlet method = init.method || input.method || 'GET';\n\t\tmethod = method.toUpperCase();\n\n\t\tif ((init.body != null || isRequest(input) && input.body !== null) && (method === 'GET' || method === 'HEAD')) {\n\t\t\tthrow new TypeError('Request with GET/HEAD method cannot have body');\n\t\t}\n\n\t\tlet inputBody = init.body != null ? init.body : isRequest(input) && input.body !== null ? clone(input) : null;\n\n\t\tBody.call(this, inputBody, {\n\t\t\ttimeout: init.timeout || input.timeout || 0,\n\t\t\tsize: init.size || input.size || 0\n\t\t});\n\n\t\tconst headers = new Headers(init.headers || input.headers || {});\n\n\t\tif (init.body != null) {\n\t\t\tconst contentType = extractContentType(this);\n\t\t\tif (contentType !== null && !headers.has('Content-Type')) {\n\t\t\t\theaders.append('Content-Type', contentType);\n\t\t\t}\n\t\t}\n\n\t\tthis[INTERNALS$2] = {\n\t\t\tmethod,\n\t\t\tredirect: init.redirect || input.redirect || 'follow',\n\t\t\theaders,\n\t\t\tparsedURL\n\t\t};\n\n\t\t// node-fetch-only options\n\t\tthis.follow = init.follow !== undefined ? init.follow : input.follow !== undefined ? input.follow : 20;\n\t\tthis.compress = init.compress !== undefined ? init.compress : input.compress !== undefined ? input.compress : true;\n\t\tthis.counter = init.counter || input.counter || 0;\n\t\tthis.agent = init.agent || input.agent;\n\t}\n\n\tget method() {\n\t\treturn this[INTERNALS$2].method;\n\t}\n\n\tget url() {\n\t\treturn format_url(this[INTERNALS$2].parsedURL);\n\t}\n\n\tget headers() {\n\t\treturn this[INTERNALS$2].headers;\n\t}\n\n\tget redirect() {\n\t\treturn this[INTERNALS$2].redirect;\n\t}\n\n\t/**\n  * Clone this request\n  *\n  * @return  Request\n  */\n\tclone() {\n\t\treturn new Request(this);\n\t}\n}\n\nBody.mixIn(Request.prototype);\n\nObject.defineProperty(Request.prototype, Symbol.toStringTag, {\n\tvalue: 'Request',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n});\n\nObject.defineProperties(Request.prototype, {\n\tmethod: { enumerable: true },\n\turl: { enumerable: true },\n\theaders: { enumerable: true },\n\tredirect: { enumerable: true },\n\tclone: { enumerable: true }\n});\n\n/**\n * Convert a Request to Node.js http request options.\n *\n * @param   Request  A Request instance\n * @return  Object   The options object to be passed to http.request\n */\nfunction getNodeRequestOptions(request) {\n\tconst parsedURL = request[INTERNALS$2].parsedURL;\n\tconst headers = new Headers(request[INTERNALS$2].headers);\n\n\t// fetch step 1.3\n\tif (!headers.has('Accept')) {\n\t\theaders.set('Accept', '*/*');\n\t}\n\n\t// Basic fetch\n\tif (!parsedURL.protocol || !parsedURL.hostname) {\n\t\tthrow new TypeError('Only absolute URLs are supported');\n\t}\n\n\tif (!/^https?:$/.test(parsedURL.protocol)) {\n\t\tthrow new TypeError('Only HTTP(S) protocols are supported');\n\t}\n\n\t// HTTP-network-or-cache fetch steps 2.4-2.7\n\tlet contentLengthValue = null;\n\tif (request.body == null && /^(POST|PUT)$/i.test(request.method)) {\n\t\tcontentLengthValue = '0';\n\t}\n\tif (request.body != null) {\n\t\tconst totalBytes = getTotalBytes(request);\n\t\tif (typeof totalBytes === 'number') {\n\t\t\tcontentLengthValue = String(totalBytes);\n\t\t}\n\t}\n\tif (contentLengthValue) {\n\t\theaders.set('Content-Length', contentLengthValue);\n\t}\n\n\t// HTTP-network-or-cache fetch step 2.11\n\tif (!headers.has('User-Agent')) {\n\t\theaders.set('User-Agent', 'node-fetch/1.0 (+https://github.com/bitinn/node-fetch)');\n\t}\n\n\t// HTTP-network-or-cache fetch step 2.15\n\tif (request.compress && !headers.has('Accept-Encoding')) {\n\t\theaders.set('Accept-Encoding', 'gzip,deflate');\n\t}\n\n\tif (!headers.has('Connection') && !request.agent) {\n\t\theaders.set('Connection', 'close');\n\t}\n\n\t// HTTP-network fetch step 4.2\n\t// chunked encoding is handled by Node.js\n\n\treturn Object.assign({}, parsedURL, {\n\t\tmethod: request.method,\n\t\theaders: exportNodeCompatibleHeaders(headers),\n\t\tagent: request.agent\n\t});\n}\n\n// fix an issue where \"PassThrough\", \"resolve\" aren't a named export for node <10\nconst PassThrough$1 = Stream.PassThrough;\nconst resolve_url = Url.resolve;\n\n/**\n * Fetch function\n *\n * @param   Mixed    url   Absolute url or Request instance\n * @param   Object   opts  Fetch options\n * @return  Promise\n */\nfunction fetch(url, opts) {\n\n\t// allow custom promise\n\tif (!fetch.Promise) {\n\t\tthrow new Error('native promise missing, set fetch.Promise to your favorite alternative');\n\t}\n\n\tBody.Promise = fetch.Promise;\n\n\t// wrap http.request into fetch\n\treturn new fetch.Promise(function (resolve, reject) {\n\t\t// build request object\n\t\tconst request = new Request(url, opts);\n\t\tconst options = getNodeRequestOptions(request);\n\n\t\tconst send = (options.protocol === 'https:' ? https : http).request;\n\n\t\t// send request\n\t\tconst req = send(options);\n\t\tlet reqTimeout;\n\n\t\tfunction finalize() {\n\t\t\treq.abort();\n\t\t\tclearTimeout(reqTimeout);\n\t\t}\n\n\t\tif (request.timeout) {\n\t\t\treq.once('socket', function (socket) {\n\t\t\t\treqTimeout = setTimeout(function () {\n\t\t\t\t\treject(new FetchError(`network timeout at: ${request.url}`, 'request-timeout'));\n\t\t\t\t\tfinalize();\n\t\t\t\t}, request.timeout);\n\t\t\t});\n\t\t}\n\n\t\treq.on('error', function (err) {\n\t\t\treject(new FetchError(`request to ${request.url} failed, reason: ${err.message}`, 'system', err));\n\t\t\tfinalize();\n\t\t});\n\n\t\treq.on('response', function (res) {\n\t\t\tclearTimeout(reqTimeout);\n\n\t\t\tconst headers = createHeadersLenient(res.headers);\n\n\t\t\t// HTTP fetch step 5\n\t\t\tif (fetch.isRedirect(res.statusCode)) {\n\t\t\t\t// HTTP fetch step 5.2\n\t\t\t\tconst location = headers.get('Location');\n\n\t\t\t\t// HTTP fetch step 5.3\n\t\t\t\tconst locationURL = location === null ? null : resolve_url(request.url, location);\n\n\t\t\t\t// HTTP fetch step 5.5\n\t\t\t\tswitch (request.redirect) {\n\t\t\t\t\tcase 'error':\n\t\t\t\t\t\treject(new FetchError(`redirect mode is set to error: ${request.url}`, 'no-redirect'));\n\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\treturn;\n\t\t\t\t\tcase 'manual':\n\t\t\t\t\t\t// node-fetch-specific step: make manual redirect a bit easier to use by setting the Location header value to the resolved URL.\n\t\t\t\t\t\tif (locationURL !== null) {\n\t\t\t\t\t\t\theaders.set('Location', locationURL);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'follow':\n\t\t\t\t\t\t// HTTP-redirect fetch step 2\n\t\t\t\t\t\tif (locationURL === null) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 5\n\t\t\t\t\t\tif (request.counter >= request.follow) {\n\t\t\t\t\t\t\treject(new FetchError(`maximum redirect reached at: ${request.url}`, 'max-redirect'));\n\t\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 6 (counter increment)\n\t\t\t\t\t\t// Create a new Request object.\n\t\t\t\t\t\tconst requestOpts = {\n\t\t\t\t\t\t\theaders: new Headers(request.headers),\n\t\t\t\t\t\t\tfollow: request.follow,\n\t\t\t\t\t\t\tcounter: request.counter + 1,\n\t\t\t\t\t\t\tagent: request.agent,\n\t\t\t\t\t\t\tcompress: request.compress,\n\t\t\t\t\t\t\tmethod: request.method,\n\t\t\t\t\t\t\tbody: request.body\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 9\n\t\t\t\t\t\tif (res.statusCode !== 303 && request.body && getTotalBytes(request) === null) {\n\t\t\t\t\t\t\treject(new FetchError('Cannot follow redirect with body being a readable stream', 'unsupported-redirect'));\n\t\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 11\n\t\t\t\t\t\tif (res.statusCode === 303 || (res.statusCode === 301 || res.statusCode === 302) && request.method === 'POST') {\n\t\t\t\t\t\t\trequestOpts.method = 'GET';\n\t\t\t\t\t\t\trequestOpts.body = undefined;\n\t\t\t\t\t\t\trequestOpts.headers.delete('content-length');\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 15\n\t\t\t\t\t\tresolve(fetch(new Request(locationURL, requestOpts)));\n\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// prepare response\n\t\t\tlet body = res.pipe(new PassThrough$1());\n\t\t\tconst response_options = {\n\t\t\t\turl: request.url,\n\t\t\t\tstatus: res.statusCode,\n\t\t\t\tstatusText: res.statusMessage,\n\t\t\t\theaders: headers,\n\t\t\t\tsize: request.size,\n\t\t\t\ttimeout: request.timeout\n\t\t\t};\n\n\t\t\t// HTTP-network fetch step 12.1.1.3\n\t\t\tconst codings = headers.get('Content-Encoding');\n\n\t\t\t// HTTP-network fetch step 12.1.1.4: handle content codings\n\n\t\t\t// in following scenarios we ignore compression support\n\t\t\t// 1. compression support is disabled\n\t\t\t// 2. HEAD request\n\t\t\t// 3. no Content-Encoding header\n\t\t\t// 4. no content response (204)\n\t\t\t// 5. content not modified response (304)\n\t\t\tif (!request.compress || request.method === 'HEAD' || codings === null || res.statusCode === 204 || res.statusCode === 304) {\n\t\t\t\tresolve(new Response(body, response_options));\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// For Node v6+\n\t\t\t// Be less strict when decoding compressed responses, since sometimes\n\t\t\t// servers send slightly invalid responses that are still accepted\n\t\t\t// by common browsers.\n\t\t\t// Always using Z_SYNC_FLUSH is what cURL does.\n\t\t\tconst zlibOptions = {\n\t\t\t\tflush: zlib.Z_SYNC_FLUSH,\n\t\t\t\tfinishFlush: zlib.Z_SYNC_FLUSH\n\t\t\t};\n\n\t\t\t// for gzip\n\t\t\tif (codings == 'gzip' || codings == 'x-gzip') {\n\t\t\t\tbody = body.pipe(zlib.createGunzip(zlibOptions));\n\t\t\t\tresolve(new Response(body, response_options));\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// for deflate\n\t\t\tif (codings == 'deflate' || codings == 'x-deflate') {\n\t\t\t\t// handle the infamous raw deflate response from old servers\n\t\t\t\t// a hack for old IIS and Apache servers\n\t\t\t\tconst raw = res.pipe(new PassThrough$1());\n\t\t\t\traw.once('data', function (chunk) {\n\t\t\t\t\t// see http://stackoverflow.com/questions/37519828\n\t\t\t\t\tif ((chunk[0] & 0x0F) === 0x08) {\n\t\t\t\t\t\tbody = body.pipe(zlib.createInflate());\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbody = body.pipe(zlib.createInflateRaw());\n\t\t\t\t\t}\n\t\t\t\t\tresolve(new Response(body, response_options));\n\t\t\t\t});\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// otherwise, use response as-is\n\t\t\tresolve(new Response(body, response_options));\n\t\t});\n\n\t\twriteToStream(req, request);\n\t});\n}\n/**\n * Redirect code matching\n *\n * @param   Number   code  Status code\n * @return  Boolean\n */\nfetch.isRedirect = function (code) {\n\treturn code === 301 || code === 302 || code === 303 || code === 307 || code === 308;\n};\n\n// expose Promise\nfetch.Promise = global.Promise;\n\nexport default fetch;\nexport { Headers, Request, Response, FetchError };\n","import { apiUrl, } from './apiUrl';\r\nimport fetch from 'node-fetch';\r\nexport var fetchAsset = function (type, id, options) {\r\n    var args = '';\r\n    if (id === '*' && options) {\r\n        if (options.cursor) {\r\n            args += \"cursor=\" + options.cursor;\r\n        }\r\n        if (options.quantity) {\r\n            if (args) {\r\n                args += '&';\r\n            }\r\n            args += \"quantity=\" + options.quantity;\r\n        }\r\n        if (options.search) {\r\n            if (args) {\r\n                args += '&';\r\n            }\r\n            args += \"search=\" + options.search;\r\n        }\r\n    }\r\n    return new Promise(function (resolve) {\r\n        fetch(apiUrl + \"/\" + type + \"s/\" + id + (args ? \"?\" + args : ''), {}).then(function (val) {\r\n            return val.json().then(function (data) { return resolve(data); });\r\n        });\r\n    });\r\n};\r\n","export * from './apiUrl';\r\nexport * from './TwinePmAssetTypes';\r\nexport * from './fetchAsset';\r\n"],"sourceRoot":""}